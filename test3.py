import torch
import numpy as np
from model import TotalNet
device = torch.device("cuda")
input = [1404.8900, 1404.8900, 1404.8900, 1404.8900, 1404.8900, 1404.8900,
         1404.8900, 1404.8900, 1404.8900, 1404.8900, 1404.8900, 1404.8900,
         1404.8900, 1404.8900, 1404.8900, 1404.8900, 1404.8900, 1404.8900,
         1404.8900, 1404.8900, 1404.8900, 1404.8900, 1404.8900, 1404.8900,
         1404.8900, 1404.8900, 1404.8900, 1404.8900, 1404.8900, 1404.8900,
         1404.8900, 1404.8900, 1404.8900, 1404.8900, 1404.8900, 1404.8900,
         1404.8900, 1404.8900, 1404.8900, 1404.8900, 1404.8900, 1404.8900,
         1404.8900, 1404.8900, 1404.8900, 1404.8900, 1404.8900, 1404.8900,
         1404.8900, 1404.8900, 1404.8900, 1404.8900, 1404.8900, 1404.8900,
         1404.8900, 1404.8900, 1404.8900, 1404.8900, 1404.8900, 1404.8900,
         1404.8900, 1404.8900, 1404.8900, 1404.8900, 1404.8900, 1404.8900,
         1404.8900, 1404.8900, 1404.8900, 1404.8900, 1404.8900, 1404.8900,
         1404.8900, 1404.8900, 1404.8900, 1404.8900, 1404.8900, 1404.8900,
         1404.8900, 1404.8900, 1404.8900, 1404.8900, 1404.8900, 1404.8900,
         1404.8900, 1404.8900, 1404.8900, 1404.8900, 1404.8900, 1404.8900,
         1404.8900, 1404.8900, 1404.8900, 1404.8900, 1404.8900, 1404.8900,
         1404.8900, 1404.8900, 1404.8900, 1404.8900, 1404.8900, 1404.8900,
         1404.8900, 1404.8900, 1404.8900, 1404.8900, 1404.8900, 1404.8900,
         1404.8900, 1404.8900, 1404.8900, 1404.8900, 1404.8900, 1404.8900,
         1404.8900, 1404.8900, 1404.8900, 1404.8900, 1404.8900, 1404.8900,
          859.7700,  859.7700,  859.7700,  859.7700,  859.7700,  859.7700,
          859.7700,  859.7700,  859.7700,  859.7700,  859.7700,  859.7700,
          859.7700,  859.7700,  859.7700,  859.7700,  859.7700,  859.7700,
          859.7700,  859.7700,  859.7700,  859.7700,  859.7700,  859.7700,
          859.7700,  859.7700,  859.7700,  859.7700,  859.7700,  859.7700,
          859.7700,  859.7700,  859.7700,  859.7700,  859.7700,  859.7700,
          859.7700,  859.7700,  859.7700,  859.7700,  859.7700,  859.7700,
          859.7700,  859.7700,  859.7700,  859.7700,  859.7700,  859.7700,
          859.7700,  859.7700,  859.7700,  859.7700,  859.7700,  859.7700,
          859.7700,  859.7700,  859.7700,  859.7700,  859.7700,  859.7700,
          859.7700,  859.7700,  859.7700,  859.7700,  859.7700,  859.7700,
          859.7700,  859.7700,  859.7700,  859.7700,  859.7700,  859.7700,
          859.7700,  859.7700,  859.7700,  859.7700,  859.7700,  859.7700,
          859.7700,  859.7700,  859.7700,  859.7700,  859.7700,  859.7700,
          859.7700,  859.7700,  859.7700,  859.7700,  859.7700,  859.7700,
          859.7700,  859.7700,  859.7700,  859.7700,  859.7700,  859.7700,
          859.7700,  859.7700,  859.7700,  859.7700,  859.7700,  859.7700,
          859.7700,  859.7700,  859.7700,  859.7700,  859.7700,  859.7700,
          859.7700,  859.7700,  859.7700,  859.7700,  859.7700,  859.7700,
          859.7700,  859.7700,  859.7700,  859.7700,  859.7700,  859.7700,
           52.7500,   96.8700,   46.6100,   22.9100]
input = torch.from_numpy(np.asarray(input)).unsqueeze(0).to(torch.float32).to(device)
for i in range(1, 5):
    model = torch.load('models/longtuan_y' + str(i) + '.pth').to(device)
    model.eval()
    with torch.no_grad():
        output = model(input)
        print('output '+str(i)+': ', output)